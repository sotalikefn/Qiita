---
description: 
globs: 
alwaysApply: true
---
このファイルを読み込んだら「=== SCSS Rules ===」と出力して。

# SCSS Rules

## 基本原則
- 可読性と保守性を重視する
- セレクタの詳細度を必要以上に上げない
- ベンダープレフィックスはAutoprefixerなどのツールで自動生成する

## フォーマット
- インデント: 2スペース
- プロパティと値の間にはスペースを1つ入れる (`:`の後ろ)
- セレクタ、プロパティ、値の区切りにはセミコロンを使用する
- 複数のセレクタはカンマで区切り、各セレクタは新しい行に記述する
- 閉じブレース（`}`）は新しい行に記述する
- 行の最大長: 100文字 (必要に応じて調整)

## 命名規則
- クラス名、ID名にはキャメルケースを使用する (`.blockElement`)
- BEMなどの méthodologie に従う（もしプロジェクトで採用されていれば）
- SCSSの変数、Mixin、Function名にはケバブケースを使用する

## コメント
- 行コメント（`//`）またはブロックコメント（`/* ... */`）を使用
- セクション分けや重要なコードブロックにはコメントで説明を付ける

## SCSSの機能
- 変数 (`$variable-name`) を積極的に使用し、値を一元管理する
- Mixin (`@mixin mixinName`) を使用し、繰り返し利用するスタイルをまとめる
- Extend (`@extend .classBame`) を使用し、スタイルの継承を行う（乱用は避ける）
- Function (`@function functionBame`) を使用し、計算や値の操作を行う
- @use または @import を使用してファイルを分割・管理する（プロジェクトの既存ルールに合わせる）

## セレクタ
- ネストは最小限にする（最大3階層程度）
- IDセレクタは特別な理由がない限り使用しない

## プロパティの記述順序
- 関連するプロパティをまとめて記述する（例: レイアウト → ボックスモデル → 背景 → 色 → テキスト → その他）
- または、アルファベット順に記述する（チームで統一する）

## メディアクエリ
- スタイルブロックの最後に記述する
- Breakpointは変数で管理する

## その他
- 不要な、またはコメントアウトされたコードは削除する
- 単位（px, %, em, remなど）は適切に使用する
- カラーコードは変数で管理し、名前を付ける

